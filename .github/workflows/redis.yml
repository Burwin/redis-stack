name: Build Redis

on: [push, pull_request]

env:
  redisversion: 6.2.6
  pythonversion: 3.9
  fpmversion: 1.14.1
  rubyversion: 2.7.2

jobs:

  build-package-osx:
    env:
      arch: x86_64
      osnick: catalina
      target: osxpkg
      platform: catalina
      osname: macos

    runs-on: macos-latest
    steps:
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{env.rubyversion}}
    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: "${{ env.pythonversion }}"
    - name: install poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-in-project: true
        virtualenvs-create: true
        installer-parallel: true

    - name: checkout sources
      uses: actions/checkout@v2
      with:
        path: redis-stack
    - name: clone redis
      uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: install dependencies
      run: |
        brew install openssl
        gem install fpm -v ${{env.fpmversion}}
        cd redis-stack
        poetry install
    - name: build redis from source
      run: |
        cd redis-stack
        source .venv/bin/activate
        invoke build-redis -r ../redis
    - name: build the package
      run: |
        cd redis-stack
        source .venv/bin/activate
        invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r ../redis/src -p ${{env.target}}
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-osx
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli
    - name: perist osx pkg
      uses: actions/upload-artifact@v2
      with:
        name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
        path: |
          redis-stack/*.osxpkg

  build-ubuntu-focal:
    runs-on: ubuntu-latest
    container: ubuntu:focal
    steps:
    - uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: install dependencies
      run: apt-get update && apt-get install -y build-essential libssl-dev
    - name: make
      run: make -C redis/src all BUILD_TLS=yes
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-focal
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli

  package-focal:
    runs-on: ubuntu-latest
    needs: [build-ubuntu-focal]
    env:
      platform: focal
      osname: Linux
      osnick: ubuntu20.04
      arch: x86_64
      target: deb
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.pythonversion}}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true

      - name: install packaging tools
        run: |
          sudo apt-get install -y rpm unzip
          poetry install
      - run: gem install fpm -v ${{env.fpmversion}}
      - uses: actions/download-artifact@v2
        with:
          name: redis-${{env.redisversion}}-${{env.platform}}
          path: deps/redis-${{env.redisversion}}-${{env.platform}}
      - name: display structure
        run: ls -R
      - name: build the package
        run: |
          source .venv/bin/activate
          invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
      - name: perist packages
        uses: actions/upload-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
          path: |
            *.deb

  build-ubuntu-bionic:
    runs-on: ubuntu-latest
    container: ubuntu:bionic
    steps:
    - uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: install dependencies
      run: apt-get update && apt-get install -y build-essential libssl-dev
    - name: make
      run: make -C redis/src all BUILD_TLS=yes
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-bionic
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli

  package-bionic:
    runs-on: ubuntu-latest
    needs: [build-ubuntu-bionic]
    env:
      platform: bionic
      osname: Linux
      osnick: ubuntu18.04
      arch: x86_64
      target: deb
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.pythonversion}}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true
      - name: install packaging tools
        run: |
          sudo apt-get install -y rpm unzip
          poetry install
      - run: gem install fpm -v ${{env.fpmversion}}
      - uses: actions/download-artifact@v2
        with:
          name: redis-${{env.redisversion}}-${{env.platform}}
          path: deps/redis-${{env.redisversion}}-${{env.platform}}
      - name: display structure
        run: ls -R
      - name: build the package
        run: |
          source .venv/bin/activate
          invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
      - name: perist packages
        uses: actions/upload-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
          path: |
            *.deb

  build-ubuntu-xenial:
    runs-on: ubuntu-latest
    container: ubuntu:xenial
    steps:
    - uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: install dependencies
      run: apt-get update && apt-get install -y build-essential libssl-dev
    - name: make
      run: make -C redis/src all BUILD_TLS=yes
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-xenial
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli

  package-xenial:
    runs-on: ubuntu-latest
    needs: [build-ubuntu-xenial]
    env:
      platform: xenial
      osname: Linux
      osnick: ubuntu16.04
      arch: x86_64
      target: deb
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.pythonversion}}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true

      - name: install packaging tools
        run: |
          sudo apt-get install -y rpm unzip
          poetry install
      - run: gem install fpm -v ${{env.fpmversion}}
      - uses: actions/download-artifact@v2
        with:
          name: redis-${{env.redisversion}}-${{env.platform}}
          path: deps/redis-${{env.redisversion}}-${{env.platform}}
      - name: display structure
        run: ls -R
      - name: build the package
        run: |
          source .venv/bin/activate
          invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
      - name: perist packages
        uses: actions/upload-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
          path: |
            *.deb

  build-rhel-7:
    runs-on: ubuntu-latest
    container: centos:7
    steps:
    - uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: install dependencies
      run: |
        yum -y install epel-release
        yum -y install gcc make jemalloc-devel openssl-devel
    - name: make
      run: make -C redis/src all BUILD_TLS=yes
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-rhel7
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli

  package-rhel7:
    runs-on: ubuntu-latest
    needs: [build-rhel-7]
    env:
      platform: rhel7
      osname: Linux
      osnick: rhel7
      arch: x86_64
      target: rpm
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.pythonversion}}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true

      - name: install packaging tools
        run: |
          sudo apt-get install -y rpm unzip
          poetry install
      - run: gem install fpm -v ${{env.fpmversion}}
      - uses: actions/download-artifact@v2
        with:
          name: redis-${{env.redisversion}}-${{env.platform}}
          path: deps/redis-${{env.redisversion}}-${{env.platform}}
      - name: display structure
        run: ls -R
      - name: build the package
        run: |
          source .venv/bin/activate
          invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
      - name: perist packages
        uses: actions/upload-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
          path: |
            *.rpm

  build-rhel-8:
    runs-on: ubuntu-latest
    container: oraclelinux:8
    steps:
    - name: install dependencies
      run: |
        dnf install -y oracle-epel-release-el8
        dnf install -y gcc make jemalloc-devel openssl-devel tar git
    - uses: actions/checkout@v2
      with:
        repository: redis/redis
        path: redis
        ref: ${{env.redisversion}}
    - name: make
      run: make -C redis/src all BUILD_TLS=yes
    - name: perist redis
      uses: actions/upload-artifact@v2
      with:
        name: redis-${{env.redisversion}}-rhel8
        path: |
          redis/src/redis-server
          redis/src/redis-sentinel
          redis/src/redis-check-aof
          redis/src/redis-check-rdb
          redis/src/redis-benchmark
          redis/src/redis-cli

  package-rhel8:
    runs-on: ubuntu-latest
    needs: [build-rhel-8]
    env:
      platform: rhel8
      osname: Linux
      osnick: rhel8
      arch: x86_64
      target: rpm
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.pythonversion}}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true
          virtualenvs-create: true
          installer-parallel: true

      - name: install packaging tools
        run: |
          sudo apt-get install -y rpm unzip
          poetry install
      - run: gem install fpm -v ${{env.fpmversion}}
      - uses: actions/download-artifact@v2
        with:
          name: redis-${{env.redisversion}}-${{env.platform}}
          path: deps/redis-${{env.redisversion}}-${{env.platform}}
      - name: display structure
        run: ls -R
      - name: build the package
        run: |
          source .venv/bin/activate
          invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
      - name: perist packages
        uses: actions/upload-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
          path: |
            *.rpm

  docker:
    env:
      platform: focal
      arch: x86_64

    runs-on: ubuntu-latest
    needs: [package-focal]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: redis-stack-${{env.platform}}-${{env.arch}}.deb
          path: redis-stack
      - name: display structure
        run: ls -R
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}
        env:
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN}}
      - name: build docker
        run: |
          docker build -f Dockerfile -t ghcr.io/redislabs/redis-stack:latest .
          docker tag ghcr.io/redislabs/redis-stack:latest ghcr.io/chayim/redis-stack:latest
          docker push ghcr.io/chayim/redis-stack:latest

  # package-snap:
  #   runs-on: ubuntu-latest
  #   needs: [build-ubuntu-focal]
  #   env:
  #     platform: focal
  #     osname: Linux
  #     osnick: ubuntu20.04
  #     arch: x86_64
  #     target: snap
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ruby/setup-ruby@v1
  #     - name: install python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{env.pythonversion}}
  #     - name: install poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         version: latest
  #         virtualenvs-in-project: true
  #         virtualenvs-create: true
  #         installer-parallel: true

  #     - name: install packaging tools
  #       run: |
  #         sudo apt-get install -y rpm unzip
  #         poetry install
  #     - run: gem install fpm -v ${{env.fpmversion}}
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: redis-${{env.redisversion}}-${{env.platform}}
  #         path: deps/redis-${{env.redisversion}}-${{env.platform}}
  #     - name: display structure
  #       run: ls -R
  #     - name: build the package
  #       run: |
  #         source .venv/bin/activate
  #         invoke package -b ${{github.run_id}} -o ${{env.osname}} -s ${{env.osnick}} -d ${{env.platform}} -a ${{env.arch}} -r deps/redis-${{env.redisversion}}-${{env.platform}} -p ${{env.target}}
  #     - name: perist packages
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: redis-stack-${{env.platform}}-${{env.arch}}.${{env.target}}
  #         path: |
  #           *.snap